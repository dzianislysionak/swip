{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nvar h = React.createElement;\nimport { SwiperConfig, PitchSwiper, DrawStacks } from '../../components/swipper'; // you can modify the global config variable\n\nSwiperConfig.cardBackground = '#f8fcfe';\nSwiperConfig.cardShade = 'gold';\n\nfunction LargeNumber(props) {\n  return h('span', {\n    style: {\n      fontSize: '1cm',\n      color: 'blue'\n    }\n  }, props.number);\n}\n\n_c = LargeNumber;\n\nfunction SmallNumber(props) {\n  return h('span', {\n    style: {\n      fontSize: '0.5cm',\n      color: 'brown'\n    }\n  }, props.number);\n}\n\n_c2 = SmallNumber;\n\nfunction bitmask_as_text(x) {\n  if (x == 0) return 'keep dragging';\n  var s = '';\n  if (x & 1) s += 'left ';\n  if (x & 2) s += 'right ';\n  if (x & 4) s += 'up ';\n  if (x & 8) s += 'down ';\n  return s;\n}\n\nvar SampleCardNumber = /*#__PURE__*/function (_Component) {\n  _inherits(SampleCardNumber, _Component);\n\n  var _super = _createSuper(SampleCardNumber);\n\n  function SampleCardNumber(props) {\n    var _this;\n\n    _classCallCheck(this, SampleCardNumber);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      number: ''\n    };\n    _this.on_dragstate = _this.on_dragstate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SampleCardNumber, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        number: '<' + this.props.number + '>',\n        label: 'still'\n      });\n    }\n  }, {\n    key: \"on_dragstate\",\n    value: function on_dragstate(new_dragout) {\n      this.setState({\n        label: bitmask_as_text(new_dragout)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return h('div', {\n        style: {\n          textAlign: 'center'\n        }\n      }, h('br'), h('br'), h('br'), h('br'), h(LargeNumber, {\n        number: this.state.number\n      }), h('br'), h(SmallNumber, {\n        number: this.state.label\n      }));\n    }\n  }]);\n\n  return SampleCardNumber;\n}(Component);\n\nvar SampleBackground = /*#__PURE__*/function (_Component2) {\n  _inherits(SampleBackground, _Component2);\n\n  var _super2 = _createSuper(SampleBackground);\n\n  function SampleBackground(props) {\n    var _this2;\n\n    _classCallCheck(this, SampleBackground);\n\n    _this2 = _super2.call(this, props);\n    _this2.on_card = _this2.on_card.bind(_assertThisInitialized(_this2));\n    _this2.on_dragstate = _this2.on_dragstate.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(SampleBackground, [{\n    key: \"on_card\",\n    value: function on_card(bitmask, number, item, all) {\n      console.log(\"card \".concat(number, \" complete \").concat(item.text, \" remaining: \").concat(all.length - number - 1));\n    }\n  }, {\n    key: \"on_dragstate\",\n    value: function on_dragstate(bitmask) {\n      console.log('dragstate change:', bitmask);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return h('div', {\n        style: {\n          zIndex: 1001,\n          position: 'fixed',\n          textAlign: 'center',\n          top: 0,\n          left: 0,\n          width: SwiperConfig.width * 2,\n          height: SwiperConfig.height * 1.5,\n          background: '#eee'\n        }\n      }, h('div', {\n        style: {\n          fontSize: '5mm',\n          color: 'red'\n        }\n      }, 'Open dev-tools to see the events'));\n    }\n  }]);\n\n  return SampleBackground;\n}(Component);\n\nvar Cardss = /*#__PURE__*/function (_Component3) {\n  _inherits(Cardss, _Component3);\n\n  var _super3 = _createSuper(Cardss);\n\n  function Cardss() {\n    _classCallCheck(this, Cardss);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(Cardss, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return h(PitchSwiper, {\n        Card: SampleCardNumber,\n        Background: SampleBackground,\n        data: [1, 2, 3],\n        ref: function ref(x) {\n          _this3.swiper = x;\n        }\n      });\n    }\n  }]);\n\n  return Cardss;\n}(Component);\n\nexport { Cardss as default };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LargeNumber\");\n$RefreshReg$(_c2, \"SmallNumber\");","map":{"version":3,"sources":["/home/denis/nextPWA/swip/pages/cards/cardss.js"],"names":["React","Component","h","createElement","SwiperConfig","PitchSwiper","DrawStacks","cardBackground","cardShade","LargeNumber","props","style","fontSize","color","number","SmallNumber","bitmask_as_text","x","s","SampleCardNumber","state","on_dragstate","bind","setState","label","new_dragout","textAlign","SampleBackground","on_card","bitmask","item","all","console","log","text","length","zIndex","position","top","left","width","height","background","Cardss","Card","Background","data","ref","swiper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nconst h = React.createElement\n\nimport { SwiperConfig, PitchSwiper, DrawStacks } from '../../components/swipper'\n\n// you can modify the global config variable\nSwiperConfig.cardBackground = '#f8fcfe'\nSwiperConfig.cardShade = 'gold'\n\nfunction LargeNumber(props) {\n  return h(\n    'span',\n    {\n      style: {\n        fontSize: '1cm',\n        color: 'blue',\n      },\n    },\n    props.number\n  )\n}\n\nfunction SmallNumber(props) {\n  return h(\n    'span',\n    {\n      style: {\n        fontSize: '0.5cm',\n        color: 'brown',\n      },\n    },\n    props.number\n  )\n}\n\nfunction bitmask_as_text(x) {\n  if (x == 0) return 'keep dragging'\n  var s = ''\n  if (x & 1) s += 'left '\n  if (x & 2) s += 'right '\n  if (x & 4) s += 'up '\n  if (x & 8) s += 'down '\n  return s\n}\n\nclass SampleCardNumber extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      number: '',\n    }\n\n    this.on_dragstate = this.on_dragstate.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({\n      number: '<' + this.props.number + '>',\n      label: 'still',\n    })\n  }\n\n  on_dragstate(new_dragout) {\n    this.setState({\n      label: bitmask_as_text(new_dragout),\n    })\n  }\n\n  render() {\n    return h(\n      'div',\n      { style: { textAlign: 'center' } },\n      h('br'),\n      h('br'),\n      h('br'),\n      h('br'),\n      h(LargeNumber, { number: this.state.number }),\n      h('br'),\n      h(SmallNumber, { number: this.state.label })\n    )\n  }\n}\n\nclass SampleBackground extends Component {\n  constructor(props) {\n    super(props)\n    this.on_card = this.on_card.bind(this)\n    this.on_dragstate = this.on_dragstate.bind(this)\n  }\n\n  on_card(bitmask, number, item, all) {\n    console.log(\n      `card ${number} complete ${item.text} remaining: ${\n        all.length - number - 1\n      }`\n    )\n  }\n\n  on_dragstate(bitmask) {\n    console.log('dragstate change:', bitmask)\n  }\n\n  render() {\n    return h(\n      'div',\n      {\n        style: {\n          zIndex: 1001,\n          position: 'fixed',\n          textAlign: 'center',\n          top: 0,\n          left: 0,\n          width: SwiperConfig.width * 2,\n          height: SwiperConfig.height * 1.5,\n          background: '#eee',\n        },\n      },\n      h(\n        'div',\n        {\n          style: {\n            fontSize: '5mm',\n            color: 'red',\n          },\n        },\n        'Open dev-tools to see the events'\n      )\n    )\n  }\n}\n\nexport default class Cardss extends Component {\n  render() {\n    return h(PitchSwiper, {\n      Card: SampleCardNumber,\n      Background: SampleBackground,\n      data: [1, 2, 3],\n      ref: (x) => {\n        this.swiper = x\n      },\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}