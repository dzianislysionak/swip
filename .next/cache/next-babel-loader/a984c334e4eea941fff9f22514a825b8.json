{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/denis/nextPWA/swip/pages/cards/tindercard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react'; // import { useSprings } from 'react-spring/hooks'\n\nimport { useGesture } from 'react-with-gesture';\nimport Card from '../../components/card';\nimport data from '../api/data'; // import '../../styles/deck.css'\n\nvar to = function to(i) {\n  return {\n    x: 0,\n    y: i * -10,\n    scale: 1,\n    rot: -10 + Math.random() * 20,\n    delay: i * 100\n  };\n};\n\nvar from = function from(i) {\n  return {\n    rot: 0,\n    scale: 1.5,\n    y: -1000\n  };\n};\n\nvar trans = function trans(r, s) {\n  return \"perspective(1500px) rotateX(30deg) rotateY(\".concat(r / 10, \"deg) rotateZ(\").concat(r, \"deg) scale(\").concat(s, \")\");\n};\n\nfunction Deck() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(function () {\n    return new Set();\n  }),\n      gone = _useState[0];\n\n  var _useSprings = useSprings(data.length, function (i) {\n    return _objectSpread(_objectSpread({}, to(i)), {}, {\n      from: from(i)\n    });\n  }),\n      _useSprings2 = _slicedToArray(_useSprings, 2),\n      props = _useSprings2[0],\n      set = _useSprings2[1];\n\n  var bind = useGesture(function (_ref) {\n    var _ref$args = _slicedToArray(_ref.args, 1),\n        index = _ref$args[0],\n        down = _ref.down,\n        _ref$delta = _slicedToArray(_ref.delta, 1),\n        xDelta = _ref$delta[0],\n        distance = _ref.distance,\n        _ref$direction = _slicedToArray(_ref.direction, 1),\n        xDir = _ref$direction[0],\n        velocity = _ref.velocity;\n\n    var trigger = velocity > 0.2;\n    var dir = xDir < 0 ? -1 : 1;\n    if (!down && trigger) gone.add(index);\n    set(function (i) {\n      if (index !== i) return;\n      var isGone = gone.has(index);\n      var x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n      var rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n      var scale = down ? 1.1 : 1;\n      return {\n        x: x,\n        rot: rot,\n        scale: scale,\n        delay: undefined,\n        config: {\n          friction: 50,\n          tension: down ? 800 : isGone ? 200 : 500\n        }\n      };\n    });\n    if (!down && gone.size === data.length) setTimeout(function () {\n      return gone.clear() || set(function (i) {\n        return to(i);\n      });\n    }, 600);\n  });\n  return props.map(function (_ref2, i) {\n    var x = _ref2.x,\n        y = _ref2.y,\n        rot = _ref2.rot,\n        scale = _ref2.scale;\n    return __jsx(Card, {\n      key: i,\n      i: i,\n      x: x,\n      y: y,\n      rot: rot,\n      scale: scale,\n      trans: trans,\n      data: data,\n      bind: bind,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    });\n  });\n}\n\n_s(Deck, \"GJ+tDNDoxUfn3sSn5jI87QbWEeI=\", true, function () {\n  return [useGesture];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/home/denis/nextPWA/swip/pages/cards/tindercard.js"],"names":["React","useState","useGesture","Card","data","to","i","x","y","scale","rot","Math","random","delay","from","trans","r","s","Deck","Set","gone","useSprings","length","props","set","bind","args","index","down","delta","xDelta","distance","direction","xDir","velocity","trigger","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n// import { useSprings } from 'react-spring/hooks'\nimport { useGesture } from 'react-with-gesture'\n\nimport Card from '../../components/card'\nimport data from '../api/data'\n\n// import '../../styles/deck.css'\n\nconst to = (i) => ({\n  x: 0,\n  y: i * -10,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100,\n})\nconst from = (i) => ({ rot: 0, scale: 1.5, y: -1000 })\n\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(30deg) rotateY(${\n    r / 10\n  }deg) rotateZ(${r}deg) scale(${s})`\n\nfunction Deck() {\n  const [gone] = useState(() => new Set())\n\n  const [props, set] = useSprings(data.length, (i) => ({\n    ...to(i),\n    from: from(i),\n  }))\n\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity,\n    }) => {\n      const trigger = velocity > 0.2\n\n      const dir = xDir < 0 ? -1 : 1\n\n      if (!down && trigger) gone.add(index)\n\n      set((i) => {\n        if (index !== i) return\n        const isGone = gone.has(index)\n\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0\n\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0)\n\n        const scale = down ? 1.1 : 1\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 },\n        }\n      })\n\n      if (!down && gone.size === data.length)\n        setTimeout(() => gone.clear() || set((i) => to(i)), 600)\n    }\n  )\n\n  return props.map(({ x, y, rot, scale }, i) => (\n    <Card\n      key={i}\n      i={i}\n      x={x}\n      y={y}\n      rot={rot}\n      scale={scale}\n      trans={trans}\n      data={data}\n      bind={bind}\n    />\n  ))\n}\n\nexport default Deck\n"]},"metadata":{},"sourceType":"module"}