{"ast":null,"code":"import React, { Component } from 'react';\nconst h = React.createElement;\nimport { SwiperConfig, PitchSwiper, DrawStacks } from '../../components/swipper'; // you can modify the global config variable\n\nSwiperConfig.cardBackground = '#f8fcfe';\nSwiperConfig.cardShade = 'gold';\n\nfunction LargeNumber(props) {\n  return h('span', {\n    style: {\n      fontSize: '1cm',\n      color: 'blue'\n    }\n  }, props.number);\n}\n\nfunction SmallNumber(props) {\n  return h('span', {\n    style: {\n      fontSize: '0.5cm',\n      color: 'brown'\n    }\n  }, props.number);\n}\n\nfunction bitmask_as_text(x) {\n  if (x == 0) return 'keep dragging';\n  var s = '';\n  if (x & 1) s += 'left ';\n  if (x & 2) s += 'right ';\n  if (x & 4) s += 'up ';\n  if (x & 8) s += 'down ';\n  return s;\n}\n\nclass SampleCardNumber extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: ''\n    };\n    this.on_dragstate = this.on_dragstate.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      number: '<' + this.props.number + '>',\n      label: 'still'\n    });\n  }\n\n  on_dragstate(new_dragout) {\n    this.setState({\n      label: bitmask_as_text(new_dragout)\n    });\n  }\n\n  render() {\n    return h('div', {\n      style: {\n        textAlign: 'center'\n      }\n    }, h('br'), h('br'), h('br'), h('br'), h(LargeNumber, {\n      number: this.state.number\n    }), h('br'), h(SmallNumber, {\n      number: this.state.label\n    }));\n  }\n\n}\n\nclass SampleBackground extends Component {\n  constructor(props) {\n    super(props);\n    this.on_card = this.on_card.bind(this);\n    this.on_dragstate = this.on_dragstate.bind(this);\n  }\n\n  on_card(bitmask, number, item, all) {\n    console.log(`card ${number} complete ${item.text} remaining: ${all.length - number - 1}`);\n  }\n\n  on_dragstate(bitmask) {\n    console.log('dragstate change:', bitmask);\n  }\n\n  render() {\n    return h('div', {\n      style: {\n        zIndex: 1001,\n        position: 'fixed',\n        textAlign: 'center',\n        top: 0,\n        left: 0,\n        width: SwiperConfig.width * 2,\n        height: SwiperConfig.height * 1.5,\n        background: '#eee'\n      }\n    }, h('div', {\n      style: {\n        fontSize: '5mm',\n        color: 'red'\n      }\n    }, 'Open dev-tools to see the events'));\n  }\n\n}\n\nexport default class Cardss extends Component {\n  render() {\n    return h(PitchSwiper, {\n      Card: SampleCardNumber,\n      Background: SampleBackground,\n      data: [1, 2, 3],\n      ref: x => {\n        this.swiper = x;\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/denis/nextPWA/swip/pages/cards/cardss.js"],"names":["React","Component","h","createElement","SwiperConfig","PitchSwiper","DrawStacks","cardBackground","cardShade","LargeNumber","props","style","fontSize","color","number","SmallNumber","bitmask_as_text","x","s","SampleCardNumber","constructor","state","on_dragstate","bind","componentDidMount","setState","label","new_dragout","render","textAlign","SampleBackground","on_card","bitmask","item","all","console","log","text","length","zIndex","position","top","left","width","height","background","Cardss","Card","Background","data","ref","swiper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nconst h = React.createElement\n\nimport { SwiperConfig, PitchSwiper, DrawStacks } from '../../components/swipper'\n\n// you can modify the global config variable\nSwiperConfig.cardBackground = '#f8fcfe'\nSwiperConfig.cardShade = 'gold'\n\nfunction LargeNumber(props) {\n  return h(\n    'span',\n    {\n      style: {\n        fontSize: '1cm',\n        color: 'blue',\n      },\n    },\n    props.number\n  )\n}\n\nfunction SmallNumber(props) {\n  return h(\n    'span',\n    {\n      style: {\n        fontSize: '0.5cm',\n        color: 'brown',\n      },\n    },\n    props.number\n  )\n}\n\nfunction bitmask_as_text(x) {\n  if (x == 0) return 'keep dragging'\n  var s = ''\n  if (x & 1) s += 'left '\n  if (x & 2) s += 'right '\n  if (x & 4) s += 'up '\n  if (x & 8) s += 'down '\n  return s\n}\n\nclass SampleCardNumber extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      number: '',\n    }\n\n    this.on_dragstate = this.on_dragstate.bind(this)\n  }\n\n  componentDidMount() {\n    this.setState({\n      number: '<' + this.props.number + '>',\n      label: 'still',\n    })\n  }\n\n  on_dragstate(new_dragout) {\n    this.setState({\n      label: bitmask_as_text(new_dragout),\n    })\n  }\n\n  render() {\n    return h(\n      'div',\n      { style: { textAlign: 'center' } },\n      h('br'),\n      h('br'),\n      h('br'),\n      h('br'),\n      h(LargeNumber, { number: this.state.number }),\n      h('br'),\n      h(SmallNumber, { number: this.state.label })\n    )\n  }\n}\n\nclass SampleBackground extends Component {\n  constructor(props) {\n    super(props)\n    this.on_card = this.on_card.bind(this)\n    this.on_dragstate = this.on_dragstate.bind(this)\n  }\n\n  on_card(bitmask, number, item, all) {\n    console.log(\n      `card ${number} complete ${item.text} remaining: ${\n        all.length - number - 1\n      }`\n    )\n  }\n\n  on_dragstate(bitmask) {\n    console.log('dragstate change:', bitmask)\n  }\n\n  render() {\n    return h(\n      'div',\n      {\n        style: {\n          zIndex: 1001,\n          position: 'fixed',\n          textAlign: 'center',\n          top: 0,\n          left: 0,\n          width: SwiperConfig.width * 2,\n          height: SwiperConfig.height * 1.5,\n          background: '#eee',\n        },\n      },\n      h(\n        'div',\n        {\n          style: {\n            fontSize: '5mm',\n            color: 'red',\n          },\n        },\n        'Open dev-tools to see the events'\n      )\n    )\n  }\n}\n\nexport default class Cardss extends Component {\n  render() {\n    return h(PitchSwiper, {\n      Card: SampleCardNumber,\n      Background: SampleBackground,\n      data: [1, 2, 3],\n      ref: (x) => {\n        this.swiper = x\n      },\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}